buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
        jcenter()
        maven { url = 'https://repo.spongepowered.org/repository/maven-public' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath "org.spongepowered:mixingradle:${mixingradle_version}"
    }
}

plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'com.matthewprenger.cursegradle' version '1.4.0'
    id "me.modmuss50.mod-publish-plugin" version "0.3.5"
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'


version = '1.0'
group = project.maven_group
archivesBaseName = project.archives_base_name

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'official', version: '1.18.2'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            arg '-mixin.config=krystalsmaterialcompats.mixins.json'
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'krystalsmaterialcompats'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
            mods {
                krystalsmaterialcompats {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            arg '-mixin.config=krystalsmaterialcompats.mixins.json'
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'krystalsmaterialcompats'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
            mods {
                krystalsmaterialcompats {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'krystalsmaterialcompats'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
            mods {
                krystalsmaterialcompats {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'krystalsmaterialcompats', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                krystalsmaterialcompats {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url = 'https://www.cursemaven.com'
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        name = 'Progwm16 maven'
        url = 'https://dvs1.progwml6.com/files/maven'
    }
    maven {
        name = 'tterrag maven'
        url = 'https://maven.tterrag.com/'
    }
    maven {
        url = "https://maven.tterrag.com/"
    }
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }
}

dependencies {
    implementation 'org.projectlombok:lombok:1.18.22'
    implementation 'org.projectlombok:lombok:1.18.22'
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    implementation fg.deobf("com.tterrag.registrate:Registrate:${registrate_version}")

    compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}:${jei_version}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-${minecraft_version}:${jei_version}")

    annotationProcessor "org.spongepowered:mixin:0.8.3:processor"
    testAnnotationProcessor "org.spongepowered:mixin:0.8.3:processor"

    // Mods this supports (for testing)
    runtimeOnly fg.deobf("com.simibubi.create:create-${create_minecraft_version}:${create_version}:slim") { transitive = false }
    runtimeOnly fg.deobf("com.jozufozu.flywheel:flywheel-forge-${flywheel_minecraft_version}:${flywheel_version}")
    runtimeOnly fg.deobf("curse.maven:createaddition-439890:4683727")
    runtimeOnly fg.deobf("slimeknights.tconstruct:TConstruct:${minecraft_version}-${tcon_version}")
    runtimeOnly fg.deobf("slimeknights.mantle:Mantle:${minecraft_version}-${mantle_version}")
    runtimeOnly fg.deobf("maven.modrinth:create-dreams-and-desires:ocohqnVU") //1.18
}
jar {
    manifest {
        attributes([
                "Specification-Title"     : "krystalsmaterialcompats",
                "Specification-Vendor"    : "PouffyDev",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "PouffyDev",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": "krystalsmaterialcompats.mixins.json" // TODO: update this for your modid
        ])
    }
}
jar.finalizedBy('reobfJar')
publishMods {
    file = jar.archiveFile
    version = "$mod_version-forge-mc$minecraft_version"
    changelog = getChangelogText("Forge", true)
    type = STABLE
    displayName = "Krystal's Material Compats $mod_version Forge $minecraft_version"
    modLoaders.add("forge")

    curseforge {
        projectId = curseforge_id
        accessToken = System.getenv("CURSEFORGE_TOKEN")
        minecraftVersions.add(minecraft_version)
    }
    modrinth {
        projectId = modrinth_id
        accessToken = System.getenv("MODRINTH_TOKEN")
        minecraftVersions.add(minecraft_version)
    }
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

// 'borrowed' from Create
String getChangelogText(String loader, boolean recent) {
    def changelogFile = file(recent ? 'recent_changelog.txt' : 'changelog.txt')
    String str = ''
    int lineCount = 0
    boolean done = false
    changelogFile.eachLine {
        if (done || it == null) {
            return
        }
        if (it.size() > 1) {
            def temp = it
            if (lineCount == 0) {
                temp = "Krystal's Material Compats ${version}"
                temp = "<span style=\"font-size: 18px; color: #333399;\">Krystal's Material Compats v${mod_version}</span>&nbsp;&nbsp;<em>for Minecraft $loader ${minecraft_version}</em><br/>"
            } else if (it.startsWith('-')) {
                temp = "&nbsp;&nbsp;&nbsp;$temp<br/>"
                temp = temp.replaceAll("(\\S+\\/\\S+)#([0-9]+)\\b", "<a href=\"https://github.com/\$1/issues/\$2\">\$0</a>");
                temp = temp.replaceAll("#([0-9]+)\\b(?!<\\/a>)", "<a href=\"https://github.com/Layers-of-Railways/Railway/issues/\$1\">\$0</a>");
            } else {
                temp = "<h4>$temp</h4>"
            }
            str += temp
            lineCount++
        } else {
            str += "<p>Please submit any Issues you come across on the&nbsp;<a href=\"https://github.com/pouffy/Krystals-Modded-Material-Compats/issues\" rel=\"nofollow\">Issue Tracker</a>.</p>"
            done = true
        }
    }
    return str
}
new File("changelog.html").write getChangelogText("Forge", false)
new File("recent_changelog.html").write getChangelogText("Forge", true)
